/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/smoke-test/hello-world": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Prompt */
        get: operations["prompt_smoke_test_hello_world_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/external-login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * External Login
         * @description Get the auth redirect URL
         */
        get: operations["external_login_api_v1_users_external_login_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/auth-callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Auth Callback */
        get: operations["auth_callback_api_v1_users_auth_callback_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/submit-phone": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Submit Phone Number
         * @description Allow users to submit and update their phone number
         */
        post: operations["submit_phone_number_api_v1_users_submit_phone_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/user/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get User Profile */
        get: operations["get_user_profile_api_v1_users_user_profile_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update User Profile */
        patch: operations["update_user_profile_api_v1_users_user_profile_patch"];
        trace?: never;
    };
    "/api/v1/qwirl/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Qwirls
         * @description Get all qwirls of a user
         *
         *     Returns:
         *         Properties
         */
        get: operations["get_qwirls_api_v1_qwirl__get"];
        put?: never;
        /**
         * Add Qwirl
         * @description Add new qwirl
         *
         *     Returns:
         *         qwirl
         */
        post: operations["add_qwirl_api_v1_qwirl__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/qwirl/{qwirl_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Qwirl Id
         * @description Get qwirl by qwirl id
         *
         *     Returns:
         *         Qwirl
         */
        get: operations["get_qwirl_id_api_v1_qwirl__qwirl_id__get"];
        put?: never;
        post?: never;
        /**
         * Delete Qwirl
         * @description Delete a qwirl
         *
         *     Returns:
         *         Failure or 204
         */
        delete: operations["delete_qwirl_api_v1_qwirl__qwirl_id__delete"];
        options?: never;
        head?: never;
        /**
         * Update Qwirl
         * @description Update a qwirl of logged in user
         *
         *     Args:
         *         qwirl_id (int): qwirl id
         *
         *     Returns:
         *         Qwirl
         */
        patch: operations["update_qwirl_api_v1_qwirl__qwirl_id__patch"];
        trace?: never;
    };
    "/api/v1/qwirl-responses/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Add Qwirl Response
         * @description Add new qwirl
         *
         *     Returns:
         *         qwirl
         */
        post: operations["add_qwirl_response_api_v1_qwirl_responses__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/qwirl-responses/{response_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Qwirl Response By Id
         * @description Get qwirl response by id
         *
         *     Returns:
         *         Qwirl
         */
        get: operations["get_qwirl_response_by_id_api_v1_qwirl_responses__response_id__get"];
        put?: never;
        post?: never;
        /**
         * Delete Qwirl Response
         * @description Delete a qwirl response
         *
         *     Returns:
         *         Failure or 204
         */
        delete: operations["delete_qwirl_response_api_v1_qwirl_responses__response_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/onboarding/user/onboarded": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Has Seen Onboarding */
        get: operations["has_seen_onboarding_api_v1_onboarding_user_onboarded_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/onboarding/user/update-onboarding": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Update Onboarding Status */
        get: operations["update_onboarding_status_api_v1_onboarding_user_update_onboarding_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/onboarding/user/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Available Categories */
        get: operations["get_all_available_categories_api_v1_onboarding_user_categories_get"];
        put?: never;
        /** Update User Categories */
        post: operations["update_user_categories_api_v1_onboarding_user_categories_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health */
        get: operations["health__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Body_update_user_profile_api_v1_users_user_profile_patch */
        Body_update_user_profile_api_v1_users_user_profile_patch: {
            /** Name */
            name?: string | null;
            /** Phone */
            phone?: string | null;
            /** Avatar */
            avatar?: string | null;
            /** Username */
            username?: string | null;
            /** Categories */
            categories?: string[] | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** QwirlAnswer */
        QwirlAnswer: {
            /** Question Id */
            question_id: number | null;
            /** Answer */
            answer: string | null;
            /** Comment */
            comment: string | null;
        };
        /** QwirlAnswerCreate */
        QwirlAnswerCreate: {
            /** Question Id */
            question_id: number;
            /** Answer */
            answer: string;
            /** Comment */
            comment: string;
        };
        /** QwirlBase */
        QwirlBase: {
            /** Id */
            id: number;
            /** Questions */
            questions: components["schemas"]["QwirlQuestion"][] | null;
            /** Tags */
            tags: string[] | null;
            /** Created By */
            created_by: number | null;
            user: components["schemas"]["QwirlUser"] | null;
        };
        /** QwirlCreate */
        QwirlCreate: {
            /** Questions */
            questions: components["schemas"]["QwirlQuestionCreate"][];
            /** Tags */
            tags: string[];
        };
        /** QwirlList */
        QwirlList: {
            /** Qwirls */
            qwirls: components["schemas"]["QwirlBase"][];
            /** Count */
            count: number | null;
        };
        /** QwirlQuestion */
        QwirlQuestion: {
            /** Id */
            id: number | null;
            /** Text */
            text: string | null;
            /** Options */
            options: string[];
            /**
             * Is Deleted
             * @default false
             */
            is_deleted: boolean | null;
        };
        /** QwirlQuestionCreate */
        QwirlQuestionCreate: {
            /** Text */
            text: string;
            /** Options */
            options: string[];
        };
        /** QwirlQuestionUpdate */
        QwirlQuestionUpdate: {
            /** Id */
            id: number | null;
            /** Text */
            text: string | null;
            /** Options */
            options: string[];
            /**
             * Is Deleted
             * @default false
             */
            is_deleted: boolean | null;
        };
        /** QwirlResponseBase */
        QwirlResponseBase: {
            /** Id */
            id: number;
            /** Answers */
            answers: components["schemas"]["QwirlAnswer"][] | null;
            /** Qwirl Id */
            qwirl_id: number | null;
            /** Answered By */
            answered_by: number | null;
            user: components["schemas"]["QwirlUser"] | null;
        };
        /** QwirlResponseCreate */
        QwirlResponseCreate: {
            /** Answers */
            answers: components["schemas"]["QwirlAnswerCreate"][];
            /** Qwirl Id */
            qwirl_id: number;
        };
        /** QwirlUpdate */
        QwirlUpdate: {
            /** Questions */
            questions: components["schemas"]["QwirlQuestionUpdate"][] | null;
            /** Tags */
            tags: string[] | null;
        };
        /** QwirlUser */
        QwirlUser: {
            /** Name */
            name: string | null;
            /** Username */
            username: string | null;
            /** Id */
            id: number | null;
        };
        /** ResponseBody */
        ResponseBody: {
            /** Message */
            message: string;
        };
        /** SignInResponse */
        SignInResponse: {
            /** Access Token */
            access_token: string;
            /** Refresh Token */
            refresh_token: string;
            /** Email */
            email: string;
            /** Full Name */
            full_name: string;
            /** Phone Number */
            phone_number: string | null;
        };
        /** UserPhoneNumber */
        UserPhoneNumber: {
            /** Phone Number */
            phone_number: string;
        };
        /** UserQuestionCategories */
        UserQuestionCategories: {
            /** Categories */
            categories: string[];
        };
        /** UserResponse */
        UserResponse: {
            /** Id */
            id: number;
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Username */
            username: string;
            /** Name */
            name: string | null;
            /** Phone */
            phone: string;
            /** Avatar */
            avatar: string | null;
            /** Categories */
            categories: string[];
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    prompt_smoke_test_hello_world_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResponseBody"];
                };
            };
        };
    };
    external_login_api_v1_users_external_login_get: {
        parameters: {
            query: {
                client_type: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    auth_callback_api_v1_users_auth_callback_get: {
        parameters: {
            query: {
                client_type: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SignInResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    submit_phone_number_api_v1_users_submit_phone_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserPhoneNumber"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_user_profile_api_v1_users_user_profile_get: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_user_profile_api_v1_users_user_profile_patch: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": components["schemas"]["Body_update_user_profile_api_v1_users_user_profile_patch"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_qwirls_api_v1_qwirl__get: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["QwirlList"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_qwirl_api_v1_qwirl__post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["QwirlCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["QwirlBase"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_qwirl_id_api_v1_qwirl__qwirl_id__get: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path: {
                qwirl_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["QwirlBase"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_qwirl_api_v1_qwirl__qwirl_id__delete: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path: {
                qwirl_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_qwirl_api_v1_qwirl__qwirl_id__patch: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path: {
                qwirl_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["QwirlUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["QwirlBase"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_qwirl_response_api_v1_qwirl_responses__post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["QwirlResponseCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["QwirlResponseBase"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_qwirl_response_by_id_api_v1_qwirl_responses__response_id__get: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path: {
                response_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["QwirlResponseBase"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_qwirl_response_api_v1_qwirl_responses__response_id__delete: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path: {
                response_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    has_seen_onboarding_api_v1_onboarding_user_onboarded_get: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_onboarding_status_api_v1_onboarding_user_update_onboarding_get: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_available_categories_api_v1_onboarding_user_categories_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    update_user_categories_api_v1_onboarding_user_categories_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use 'Basic email@domain.com' */
                Authentication?: unknown;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserQuestionCategories"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    health__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
